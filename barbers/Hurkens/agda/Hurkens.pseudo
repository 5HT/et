-- not agda :)

#Bottom : #Setoid
#Bottom := \/(A : #Setoid) -> A

#Not : #Setoid -> #Setoid
#Not := \(A: #Setoid) -> A -> #Bottom

#Power : #Setoid -> #Setoid
#Power := \(A: #Setoid) -> A -> #Shadow

#Pow2 : #Setoid -> #Setoid
#Pow2 := \(A: #Setoid) -> (#Power (#Power (A)))

#Univ : #Setoid
#Univ = \/(X : #Setoid) -> \/(Mk: (#Pow2 X) -> X) -> (#Pow2 X)

#tau : (#Pow2 #Univ) -> #Univ
#tau := 
    \(t: #Pow2 #Univ)-> 
    \(X: #Setoid)-> \(f: (#Pow2 X) -> X)-> \(p: X -> #Shadow)-> 
    t (\(x: #Univ)-> p (f (x X f)))

#sigma : #Univ -> (#Pow2 #Univ)
#sigma := \(s: #Univ) -> s #Univ #tau

#DELTA : #Power #Univ
#DELTA = \(y: #Univ) -> #Not (\/(p : #Power #Univ) -> #sigma y p -> p (#tau (#sigma y)))

#OMEGA : #Univ
#OMEGA = #tau (\(p: #Power #Univ) -> \/(x : #Univ) -> #sigma x p -> p x)

#D : #Setoid
#D = \/(p : #Power #Univ) -> #sigma #OMEGA p -> p (#tau (#sigma #OMEGA))

#lem1 : \/(p : #Power #Univ)-> (\/(x : #Univ)-> #sigma x p -> p x) -> p #OMEGA
#lem1 := \(p: #Power #Univ)-> 
    \(H1: \/(x : #Univ)-> #sigma x p -> p x) -> 
    H1 #OMEGA (\(x : #Univ) -> H1 (#tau (#sigma x)))

#lem2 : #Not #D
#lem2 = #lem1 #DELTA (
    \x \H2 \H3 -> H3 #DELTA H2 (
    \p -> H3 (\y -> p (#tau (#sigma y)))))

#lem3 : #D
#lem3 := \(p : #Power #Univ) -> #lem1 (\(y: #Power #Univ) -> p (#tau (#sigma y)))

#loop : #Bottom
#loop = #lem2 #lem3
