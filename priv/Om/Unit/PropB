-- #Unit/PropB
\(lim : #Unit/Type ) ->
\(prop : #Unit/PropA lim)  ->
    forall(XUnitElType : #Type1 ) ->
    forall(XUnitElProp : XUnitElType -> #Prop ) ->
    forall(XUnitEqu : 
        forall(a : XUnitElType)->forall(aok: XUnitElProp a)->
        forall(b : XUnitElType)->forall(bok : XUnitElProp b)-> #Prop )->
    forall(XUnitEquRefl : 
        forall(a : XUnitElType)->forall(aok: XUnitElProp a)->
        XUnitEqu a aok a aok)->
    forall(XUnitEquTrans : 
        forall(a : XUnitElType)->forall(aok: XUnitElProp a)->
        forall(b : XUnitElType)->forall(bok: XUnitElProp b)->
        forall(c : XUnitElType)->forall(cok: XUnitElProp c)->
        XUnitEqu a aok b bok -> XUnitEqu b bok c cok -> XUnitEqu a aok c cok) ->
    forall(XUnitEquSym : 
        forall(a : XUnitElType)->forall(aok: XUnitElProp a)->
        forall(b : XUnitElType)->forall(bok: XUnitElProp b)->
        XUnitEqu a aok b bok -> XUnitEqu b bok a aok) ->
    forall(XUnitPoint : XUnitElType) ->
    forall(XUnitPointOk : XUnitElProp XUnitPoint)->
    forall(YUnitElType : #Type1 ) ->
    forall(YUnitElProp : YUnitElType -> #Prop ) ->
    forall(YUnitEqu : 
        forall(a : YUnitElType)->forall(aok: YUnitElProp a)->
        forall(b : YUnitElType)->forall(bok : YUnitElProp b)-> #Prop )->
    forall(YUnitEquRefl : 
        forall(a : YUnitElType)->forall(aok: YUnitElProp a)->
        YUnitEqu a aok a aok)->
    forall(YUnitEquTrans : 
        forall(a : YUnitElType)->forall(aok: YUnitElProp a)->
        forall(b : YUnitElType)->forall(bok: YUnitElProp b)->
        forall(c : YUnitElType)->forall(cok: YUnitElProp c)->
        YUnitEqu a aok b bok -> YUnitEqu b bok c cok -> YUnitEqu a aok c cok) ->
    forall(YUnitEquSym : 
        forall(a : YUnitElType)->forall(aok: YUnitElProp a)->
        forall(b : YUnitElType)->forall(bok: YUnitElProp b)->
        YUnitEqu a aok b bok -> YUnitEqu b bok a aok) ->
    forall(YUnitPoint : YUnitElType) ->
    forall(YUnitPointOk : YUnitElProp YUnitPoint)->
    forall(onElType : XUnitElType -> YUnitElType)->
    forall(onElProp : 
        forall (el : XUnitElType) -> 
        XUnitElProp el -> YUnitElProp (onElType el))->
    forall(onEqu : 
        forall(elA : XUnitElType)->forall(okA : XUnitElProp elA)->
        forall(elB : XUnitElType)->forall(okB : XUnitElProp elB)->
        XUnitEqu elA okA elB okB -> 
        YUnitEqu (onElType elA) (onElProp elA okA) (onElType elB) (onElProp elB okB)) ->
    forall(onPoint : 
        YUnitEqu 
            (onElType XUnitPoint) (onElProp XUnitPoint XUnitPointOk) 
            YUnitPoint YUnitPointOk) ->
    YUnitEqu 
        (onElType 
            (lim 
                XUnitElType XUnitElProp XUnitEqu 
                XUnitEquRefl XUnitEquTrans XUnitEquSym 
                XUnitPoint XUnitPointOk)) 
        (onElProp 
            (lim 
                XUnitElType XUnitElProp XUnitEqu 
                XUnitEquRefl XUnitEquTrans XUnitEquSym 
                XUnitPoint XUnitPointOk) 
            (prop  
                XUnitElType XUnitElProp XUnitEqu 
                XUnitEquRefl XUnitEquTrans XUnitEquSym 
                XUnitPoint XUnitPointOk))
        (lim 
            YUnitElType YUnitElProp YUnitEqu 
            YUnitEquRefl YUnitEquTrans YUnitEquSym 
            YUnitPoint YUnitPointOk) 
        (prop  
            YUnitElType YUnitElProp YUnitEqu 
            YUnitEquRefl YUnitEquTrans YUnitEquSym 
            YUnitPoint YUnitPointOk)
