-- #ElemShadow.MkOkLim : \/(P : #Prop) -> \/(p : P) -> #ElemShadowOkLim (#ElemShadow.Mk P p)

-- args
\ (P : #Prop) ->
\ (p : P) ->

-- setoid
\ (ElemShadow1 : #Star ) ->
\ (ElemShadow1Ok : ElemShadow1 -> #Prop ) ->
\ (ElemShadow1Equ : ElemShadow1 -> ElemShadow1 -> #Prop ) ->
\ (ElemShadow1Refl :
    \/(s : ElemShadow1) ->
    ElemShadow1Equ s s ) ->
\ (ElemShadow1Trans :
    \/(s1 : ElemShadow1) -> \/(s2 : ElemShadow1) -> \/(s3 : ElemShadow1) ->
    ElemShadow1Equ s1 s2 -> ElemShadow1Equ s2 s3 -> ElemShadow1Equ s1 s3) ->
\ (ElemShadow1Sym :
    \/(s1 : ElemShadow1) -> \/(s2 : ElemShadow1) ->
    ElemShadow1Equ s1 s2 -> ElemShadow1Equ s2 s1) ->

-- algebra/constructors
\ (Mk1 : \/(P : #Prop) -> \/(p : P) -> ElemShadow1) ->
\ (Mk1Ok : \/(P : #Prop) -> \/(p : P) -> ElemShadow1Ok (Mk1 P p)) ->
\ (Mk1Equ :
    \/(P1 : #Prop) -> \/(p1 : P1) -> \/(P2 : #Prop) -> \/(p2 : P2) ->
    #EquProp P1 P2 -> ElemShadow1Equ (Mk1 P1 p1) (Mk1 P2 p2)) ->

-- setoid
\ (ElemShadow2 : #Star ) ->
\ (ElemShadow2Ok : ElemShadow2 -> #Prop ) ->
\ (ElemShadow2Equ : ElemShadow2 -> ElemShadow2 -> #Prop ) ->
\ (ElemShadow2Refl :
    \/(s : ElemShadow2) ->
    ElemShadow2Equ s s ) ->
\ (ElemShadow2Trans :
    \/(s1 : ElemShadow2) -> \/(s2 : ElemShadow2) -> \/(s3 : ElemShadow2) ->
    ElemShadow2Equ s1 s2 -> ElemShadow2Equ s2 s3 -> ElemShadow2Equ s1 s3) ->
\ (ElemShadow2Sym :
    \/(s1 : ElemShadow2) -> \/(s2 : ElemShadow2) ->
    ElemShadow2Equ s1 s2 -> ElemShadow2Equ s2 s1) ->

-- algebra/constructors
\ (Mk2 : \/(P : #Prop) -> \/(p : P) -> ElemShadow2) ->
\ (Mk2Ok : \/(P : #Prop) -> \/(p : P) -> ElemShadow2Ok (Mk2 P p)) ->
\ (Mk2Equ :
    \/(P1 : #Prop) -> \/(p1 : P1) -> \/(P2 : #Prop) -> \/(p2 : P2) ->
    #EquProp P1 P2 -> ElemShadow2Equ (Mk2 P1 p1) (Mk2 P2 p2)) ->

-- mor
\ (mor : ElemShadow1 -> ElemShadow2) ->
\ (morOk : \/(s : ElemShadow1) -> ElemShadow1Ok s -> ElemShadow2Ok (mor s)) ->
\ (morEqu : \/(s1 : ElemShadow1) -> \/(s2 : ElemShadow1) -> ElemShadow2Equ (mor s1) (mor s2)) ->
\ (morAlg : \/(P : #Prop) -> \/(p : P) -> ElemShadow2Equ (mor (Mk1 P p)) (Mk2 P p)) ->

-- result
morAlg P p
