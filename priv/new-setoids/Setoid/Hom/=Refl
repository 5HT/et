-- #Setoid/Hom/=Refl : ∀(A, B:#Setoid/Ob/) → #Setoid/Ob/@Refl (#Setoid/Hom/=El/ A B) (#Setoid/Hom/=Equ A B)

-- arg A
λ (A.El : #Setoid/Ob/@El) →
λ (A.El. : #Setoid/Ob/@El. A.El) →
λ (A.Equ : #Setoid/Ob/@Equ A.El A.El.) →
λ (A.Refl : #Setoid/Ob/@Refl A.El A.El. A.Equ) →
λ (A.Trans : #Setoid/Ob/@Trans A.El A.El. A.Equ) →
λ (A.Sym : #Setoid/Ob/@Sym A.El A.El. A.Equ) →

-- arg B
λ (B.El : #Setoid/Ob/@El) →
λ (B.El. : #Setoid/Ob/@El. B.El) →
λ (B.Equ : #Setoid/Ob/@Equ B.El B.El.) →
λ (B.Refl : #Setoid/Ob/@Refl B.El B.El. B.Equ) →
λ (B.Trans : #Setoid/Ob/@Trans B.El B.El. B.Equ) →
λ (B.Sym : #Setoid/Ob/@Sym B.El B.El. B.Equ) →

-- equ args
λ (hom0 : #Setoid/Hom/=El A.El A.El. A.Equ A.Refl A.Trans A.Sym B.El B.El. B.Equ B.Refl B.Trans B.Sym) →
λ (hom0. : #Setoid/Hom/=El. A.El A.El. A.Equ A.Refl A.Trans A.Sym B.El B.El. B.Equ B.Refl B.Trans B.Sym hom0) →

--
λ (a : A.El) → λ (a. : A.El. a) →
B.Refl
    (#Setoid/Hom/El/.onEl A.El A.El. A.Equ A.Refl A.Trans A.Sym B.El B.El. B.Equ B.Refl B.Trans B.Sym hom0 hom0. a a.)
    (#Setoid/Hom/El/.onEl. A.El A.El. A.Equ A.Refl A.Trans A.Sym B.El B.El. B.Equ B.Refl B.Trans B.Sym hom0 hom0. a a.)
