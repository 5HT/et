-- #Prop/Sigma2 : (P1,P2) ∀ (p11 : P1) → ∀ (p12 : P1) → (P2 p11 → P2 p12)

--
-- arg A
λ (A.El : #Setoid/Ob/@El) →
λ (A.El. : #Setoid/Ob/@El. A.El) →
λ (A.Equ : #Setoid/Ob/@Equ A.El A.El.) →
λ (A.Cong : #Setoid/Ob/@Cong A.El A.El. A.Equ) →
λ (A.Refl : #Setoid/Ob/@Refl A.El A.El. A.Equ) →
λ (A.Trans : #Setoid/Ob/@Trans A.El A.El. A.Equ) →
λ (A.Sym : #Setoid/Ob/@Sym A.El A.El. A.Equ) →

-- arg B
λ (B.El : #Setoid/Ob/@El) →
λ (B.El. : #Setoid/Ob/@El. B.El) →
λ (B.Equ : #Setoid/Ob/@Equ B.El B.El.) →
λ (B.Cong : #Setoid/Ob/@Cong B.El B.El. B.Equ) →
λ (B.Refl : #Setoid/Ob/@Refl B.El B.El. B.Equ) →
λ (B.Trans : #Setoid/Ob/@Trans B.El B.El. B.Equ) →
λ (B.Sym : #Setoid/Ob/@Sym B.El B.El. B.Equ) →

-- Ok arg
λ (onEl : #Setoid/Hom/El/@onEl
    A.El A.El. A.Equ A.Cong A.Refl A.Trans A.Sym
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym) →
λ (onEl.- : #Setoid/Hom/El/@onEl.
    A.El A.El. A.Equ A.Cong A.Refl A.Trans A.Sym
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
    onEl) →
λ (onEl.+ : #Setoid/Hom/El/@onEl.
    A.El A.El. A.Equ A.Cong A.Refl A.Trans A.Sym
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
    onEl) →
λ (f.equ- : #Setoid/Hom/El/@onEqu
    A.El A.El. A.Equ A.Cong A.Refl A.Trans A.Sym
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
    onEl onEl.-) →

-- onEqu
λ (a1 : A.El) → λ (a1. : A.El. a1) →
λ (a2 : A.El) → λ (a2. : A.El. a2) →
λ (a.equ : A.Equ a1 a1. a2 a2.) →
B.Cong
    (onEl a1 a1.) (onEl a2 a2.)
    (onEl.- a1 a1.) (onEl.+ a1 a1.)
    (onEl.- a2 a2.) (onEl.+ a2 a2.)
    (f.equ a1 a1. a2 a2. a.equ)
