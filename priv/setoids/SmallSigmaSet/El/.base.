-- B : #Setoid/Ob/
λ (B.El : #Setoid/Ob/@El) →
λ (B.El. : #Setoid/Ob/@El. B.El) →
λ (B.Equ : #Setoid/Ob/@Equ B.El B.El.) →
λ (B.Cong : #Setoid/Ob/@Cong B.El B.El. B.Equ) →
λ (B.Refl : #Setoid/Ob/@Refl B.El B.El. B.Equ) →
λ (B.Trans : #Setoid/Ob/@Trans B.El B.El. B.Equ) →
λ (B.Sym : #Setoid/Ob/@Sym B.El B.El. B.Equ) →

-- P : [#PredicateSet/ B]
λ (P : #PredicateSet/=El
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym) →
λ (P. : #PredicateSet/=El.
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
    P) →

-- args
λ (sigma : #SmallSigmaSet/El/@1
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
    P P.) →
λ (sigma. : #SmallSigmaSet/El/@2
    B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
    P P. sigma) →

-- res
#Prop/Sigma2/pr1
    (#SmallSigmaSet/El/@base.
        B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
        P P. sigma)
    (#SmallSigmaSet/El/@pred
        B.El B.El. B.Equ B.Cong B.Refl B.Trans B.Sym
        P P. sigma)
    sigma.
